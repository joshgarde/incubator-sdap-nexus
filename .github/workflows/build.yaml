name: build
on: push
jobs:
  build:
    name: Build, Test, Verify, Publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sdap-nexus
      uses: actions/checkout@v2
    - name: Install miniconda
      run: |
        curl -o /tmp/miniconda.sh "https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"
        bash /tmp/miniconda.sh -b -p /opt/miniconda
        echo "/opt/miniconda/condabin" >> $GITHUB_PATH  # Preserve conda's PATH across jobs
        /opt/miniconda/condabin/conda init bash
    - name: Setup dependencies
      run: |
        conda config --add channels conda-forge
        conda config --set channel_priority strict
        conda env create -qf environment.yml
    - name: Install analysis & data-access
      shell: bash -ieo pipefail {0} # Interative shells required for conda
      run: |
        conda activate sdap-nexus
        pip install -q analysis
        pip install -q data-access
    - name: Install pipeline tools
      shell: bash -ieo pipefail {0}
      run: |
        conda activate sdap-nexus
        conda install -yq pylint flake8 pytest
    - name: Lint
      shell: bash -ieo pipefail {0}
      continue-on-error: true
      run: |
        conda activate sdap-nexus
        pylint analysis
        flake8 analysis
        pylint data-access
        flake8 data-access
    - name: Test and coverage
      continue-on-error: true
      shell: bash -ieo pipefail {0}
      run: |
        conda activate sdap-nexus
        pytest --junitxml=build/reports/pytest-analysis.xml analysis/tests/
        pytest --junitxml=build/reports/pytest-data-access.xml data-access/tests/
    - name: Get module commits relative to develop
      if: ${{ startsWith(github.ref, 'refs/heads/feature/') }}
      run: |
        BRANCH=develop
        echo "DATA_ACCESS_COMMITS=$(git rev-list $BRANCH -- data-access| wc -l | awk '{print $1}')" >> $GITHUB_ENV
        echo "ANALYSIS_COMMITS=$(git rev-list $BRANCH -- analysis| wc -l | awk '{print $1}')" >> $GITHUB_ENV
    - name: Get module commits relative to master
      if: ${{ github.ref == 'refs/heads/develop' }}
      run: |
        BRANCH=master
        echo "DATA_ACCESS_COMMITS=$(git rev-list $BRANCH -- data-access| wc -l | awk '{print $1}')" >> $GITHUB_ENV
        echo "ANALYSIS_COMMITS=$(git rev-list $BRANCH -- analysis| wc -l | awk '{print $1}')" >> $GITHUB_ENV
    - name: Bump pre-alpha version
      if: ${{ startsWith(github.ref, 'refs/heads/feature/') }}
      run: |
        if [ $DATA_ACCESS_COMMITS -gt 0 ]; then
          python3 .github/workflows/version.py analysis/VERSION.txt pre-alpha $(git rev-parse --short ${GITHUB_SHA})
        fi
        if [ $ANALYSIS_COMMITS -gt 0 ]; then
          python3 .github/workflows/version.py data-access/VERSION.txt pre-alpha $(git rev-parse --short ${GITHUB_SHA})
        fi
        DOCKER_VERSION=python3 .github/workflows/version.py docker/nexus-webapp/VERSION.txt pre-alpha $(git rev-parse --short ${GITHUB_SHA})
    - name: Bump alpha version
      if: ${{ github.ref == 'refs/heads/develop' }}
      run: |
        if [ $DATA_ACCESS_COMMITS -gt 0 ]; then
          python3 .github/workflows/version.py analysis/VERSION.txt alpha
        fi
        if [ $ANALYSIS_COMMITS -gt 0 ]; then
          python3 .github/workflows/version.py data-access/VERSION.txt alpha
        fi
        DOCKER_VERSION=python3 .github/workflows/version.py docker/nexus-webapp/VERSION.txt alpha
    - name: Bump release version
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
        python3 .github/workflows/version.py analysis/VERSION.txt patch
        python3 .github/workflows/version.py data-access/VERSION.txt patch
        python3 .github/workflows/version.py docker/nexus-webapp/VERSION.txt patch
    - name: Commit version bump
      run: |
        git config --global user.name 'l2ss-py bot'
        git config --global user.email 'l2ss-py@noreply.github.com'
        git add analysis/VERSION.txt data-access/VERSION.txt docker/nexus-webapp/VERSION.txt
        git commit -m "/version $(date -uIseconds)"
        git push
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        file: 'docker/nexus-webapp/Dockerfile'
        tags: nexusjpl/nexus-webapp:distributed.${{ DOCKER_VERSION }}